Функция ПолучитьПрефиксНомера() Экспорт

	Возврат ПланыОбмена.Мобильные.ЭтотУзел().Код + "-";

КонецФункции

Функция СформироватьПакетОбмена(УзелОбмена) Экспорт

	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку("UTF-8");
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
	ЗаписьСообщения.НачатьЗапись(ЗаписьXML, УзелОбмена);
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("xsi", "http://www.w3.org/2001/XMLSchema-instance");
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("v8", "http://v8.1c.ru/data");
	ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(УзелОбмена, ЗаписьСообщения.НомерСообщения);

	Пока ВыборкаИзменений.Следующий() Цикл
		Данные = ВыборкаИзменений.Получить();
		// Записываем данные в сообщение.
		ЗаписатьДанные(ЗаписьXML, Данные);
	КонецЦикла;

	ЗаписьСообщения.ЗакончитьЗапись();
	Возврат Новый ХранилищеЗначения(ЗаписьXML.Закрыть(), Новый СжатиеДанных(9));

КонецФункции

Процедура ЗаписатьДанные(ЗаписьXML, Данные) Экспорт
	
	Если ТипЗнч(Данные) = Тип("СправочникОбъект.ОсновныеСредства") Тогда
		// Записываем элемент справочника вручную.
		ЗаписатьXMLОсновноеСредство(ЗаписьXML, Данные);
		
	ИначеЕсли ТипЗнч(Данные) = Тип("СправочникОбъект.ЦМО") Тогда
		// Записываем элемент справочника вручную.
		ЗаписатьXMLЦМО(ЗаписьXML, Данные);

		
	Иначе
		// Записываем данные с помощью стандартного метода.
		ЗаписатьXML(ЗаписьXML, Данные);
	КонецЕсли
	
КонецПроцедуры

Процедура ЗаписатьXMLОсновноеСредство(ЗаписьXML, ОсновноеСредство) Экспорт

	// Записываем начало элемента XML.
	ЗаписьXML.ЗаписатьНачалоЭлемента("CatalogObject.ОсновныеСредства.Вручную");
	// Ссылка.
	ЗаписатьXML(ЗаписьXML, ОсновноеСредство.Ссылка, "Ref", НазначениеТипаXML.Явное);
	// ЭтоГруппа.
	ЗаписатьXML(ЗаписьXML, ОсновноеСредство.ЭтоГруппа, "IsFolder", НазначениеТипаXML.Явное);
	// Родитель.
	ЗаписатьXML(ЗаписьXML, ОсновноеСредство.Родитель, "Parent", НазначениеТипаXML.Явное);
	// Наименование.
	ЗаписатьXML(ЗаписьXML, ОсновноеСредство.Наименование, "Description", НазначениеТипаXML.Явное);
		
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры 

Процедура ЗаписатьXMLЦМО(ЗаписьXML, ЦМО) Экспорт

	// Записываем начало элемента XML.
	ЗаписьXML.ЗаписатьНачалоЭлемента("CatalogObject.ЦМО.Вручную");
	// Ссылка.
	ЗаписатьXML(ЗаписьXML, ЦМО.Ссылка, "Ref", НазначениеТипаXML.Явное);
	// ЭтоГруппа.
	ЗаписатьXML(ЗаписьXML, ЦМО.ЭтоГруппа, "IsFolder", НазначениеТипаXML.Явное);
	// Родитель.
	ЗаписатьXML(ЗаписьXML, ЦМО.Родитель, "Parent", НазначениеТипаXML.Явное);
	// Наименование.
	ЗаписатьXML(ЗаписьXML, ЦМО.Наименование, "Description", НазначениеТипаXML.Явное);
		
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

Функция ПрочитатьДанные(ЧтениеXML) Экспорт

	ТипXML = ПолучитьXMLТип(ЧтениеXML);
	Если ТипXML = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;

	Если ТипXML.ИмяТипа = "CatalogObject.ОсновныеСредства.Вручную" И ТипXML.URIПространстваИмен = "" Тогда
		Возврат ПрочитатьXMLОсновныеСредства(ЧтениеXML);
	КонецЕсли;
	
	Если ТипXML.ИмяТипа = "CatalogObject.ЦМО.Вручную" И ТипXML.URIПространстваИмен = "" Тогда
		Возврат ПрочитатьXMLЦМО(ЧтениеXML);
	КонецЕсли;
	
	                                                                      
	// Пытаемся прочесть значение из объекта ЧтениеXML стандартным образом.
	Возврат ПрочитатьXML(ЧтениеXML);

КонецФункции // ПрочитатьДанные(ЧтениеXML)

Функция ПрочитатьXMLОсновныеСредства(ЧтениеXML) Экспорт

	Если ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента Тогда
		ВызватьИсключение "Ошибка чтения XML";
	КонецЕсли;

	// Чтение следующего узла.
	ЧтениеXML.Прочитать();
	// Чтение ссылки на элемент справочника.
	ОсновноеСредствоСсылка = ПрочитатьXML(ЧтениеXML);

	Если ТипЗнч(ОсновноеСредствоСсылка) <> Тип("СправочникСсылка.ОсновныеСредства") Тогда
		ВызватьИсключение "Ошибка чтения XML";
	КонецЕсли;

	// Пытаемся создать объект по полученной ссылке.
	ОсновноеСредство = ОсновноеСредствоСсылка.ПолучитьОбъект();
	// Чтение признака группы.
	ЭтоГруппа = ПрочитатьXML(ЧтениеXML);

	Если ОсновноеСредство <> Неопределено Тогда
		Если ОсновноеСредство.ЭтоГруппа <> ЭтоГруппа Тогда
			ВызватьИсключение "Некорректные данные";
		КонецЕсли;
	Иначе
		// Создаем элемент справочника.
		Если ЭтоГруппа = Истина Тогда
			ОсновноеСредство = Справочники.ОсновныеСредства.СоздатьГруппу();
		Иначе
			ОсновноеСредство = Справочники.ОсновныеСредства.СоздатьЭлемент();
		КонецЕсли;
		// Устанавливаем значение ссылки для нового объекта.
		ОсновноеСредство.УстановитьСсылкуНового(ОсновноеСредствоСсылка);
	КонецЕсли;
	// Родитель.
	ОсновноеСредство.Родитель = ПрочитатьXML(ЧтениеXML);
	// Наименование.
	ОсновноеСредство.Наименование = ПрочитатьXML(ЧтениеXML);
	// Проверяем, что текущим узлом является "КонецЭлемента".
	Если ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента Тогда
		ВызватьИсключение "Ошибка чтения XML";
	КонецЕсли;
	
	// Чтение следующего узла для завершения чтения элемента.
	ЧтениеXML.Прочитать();

	Возврат ОсновноеСредство;

КонецФункции

Функция ПрочитатьXMLЦМО(ЧтениеXML) Экспорт

	Если ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента Тогда
		ВызватьИсключение "Ошибка чтения XML";
	КонецЕсли;

	// Чтение следующего узла.
	ЧтениеXML.Прочитать();
	// Чтение ссылки на элемент справочника.
	ЦМОСсылка = ПрочитатьXML(ЧтениеXML);

	Если ТипЗнч(ЦМОСсылка) <> Тип("СправочникСсылка.ЦМО") Тогда
		ВызватьИсключение "Ошибка чтения XML";
	КонецЕсли;

	// Пытаемся создать объект по полученной ссылке.
	ЦМО = ЦМОСсылка.ПолучитьОбъект();
	// Чтение признака группы.
	ЭтоГруппа = ПрочитатьXML(ЧтениеXML);

	Если ЦМО <> Неопределено Тогда
		Если ЦМО.ЭтоГруппа <> ЭтоГруппа Тогда
			ВызватьИсключение "Некорректные данные";
		КонецЕсли;
	Иначе
		// Создаем элемент справочника.
		Если ЭтоГруппа = Истина Тогда
			ЦМО = Справочники.ЦМО.СоздатьГруппу();
		Иначе
			ЦМО = Справочники.ЦМО.СоздатьЭлемент();
		КонецЕсли;
		// Устанавливаем значение ссылки для нового объекта.
		ЦМО.УстановитьСсылкуНового(ЦМОСсылка);
	КонецЕсли;
	// Родитель.
	ЦМО.Родитель = ПрочитатьXML(ЧтениеXML);
	// Наименование.
	ЦМО.Наименование = ПрочитатьXML(ЧтениеXML);
	// Проверяем, что текущим узлом является "КонецЭлемента".
	Если ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента Тогда
		ВызватьИсключение "Ошибка чтения XML";
	КонецЕсли;
	
	// Чтение следующего узла для завершения чтения элемента.
	ЧтениеXML.Прочитать();

	Возврат ЦМО;

КонецФункции

Функция ПринятьИзменения(Отправитель, Данные) Экспорт

	Прием = Истина;

	Если ПланыОбмена.ИзменениеЗарегистрировано(Отправитель, Данные) Тогда
		Если ТипЗнч(Данные) = Тип("ДокументОбъект.ИнвентаризацияДляМП") Тогда
			Прием = Ложь;
		КонецЕсли;
	КонецЕсли;

	Возврат Прием;

КонецФункции

Функция ВозможностьЧтенияДанных(ЧтениеXML) Экспорт

	// Получаем тип данных XML, который может быть считан в данный момент.
	ТипXML = ПолучитьXMLТип(ЧтениеXML);
	Если ТипXML = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если (ТипXML.ИмяТипа = "CatalogObject.ОсновныеСредства.Вручную" ИЛИ ТипXML.ИмяТипа = "CatalogObject.ЦМО.Вручную") И ТипXML.URIПространстваИмен = "" Тогда
		Возврат Истина;
	КонецЕсли;

	Возврат ВозможностьЧтенияXML(ЧтениеXML);

КонецФункции

Функция ВыполнитьОбменДанными(ТекстОшибки) Экспорт

	Прокси = ПолучитьПрокси(ТекстОшибки);
	Если Прокси = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	КодЦБ = Константы.КодЦентральнойБазы.Получить();
	ЦентральныйУзелОбмена = ПланыОбмена.Мобильные.НайтиПоКоду(КодЦБ);
	Узел = ПланыОбмена.Мобильные.ЭтотУзел();
	// Инициализируем обмен с центральной базой.
	КодУзла = Прокси.НачатьОбмен(Узел.Код, ЦентральныйУзелОбмена.НомерПринятого, ЦентральныйУзелОбмена.НомерОтправленного);
	
	Если КодУзла = "" Тогда
		ТекстОшибки = "Узел с кодом " + Узел.Код + " не найден!";
		Возврат Ложь;
	КонецЕсли;

	// Отправляем данные.
	ДанныеОбмена = Обмен.СформироватьПакетОбмена(ЦентральныйУзелОбмена);
	Прокси.ЗаписатьДанные(Узел.Код, ДанныеОбмена);
	// Принимаем данные
	ДанныеОбмена = Прокси.ПолучитьДанные(Узел.Код);
	Обмен.ПринятьПакетОбмена(ЦентральныйУзелОбмена, ДанныеОбмена);

	Возврат Истина;

КонецФункции

#Область СвязьСВебсервисами

Функция ПолучитьПрокси(ТекстОшибки) Экспорт
	ТекстОшибки = "";

 	Адрес = Константы.АдресЦентральнойБазы.Получить();
 	Адрес = Адрес + "/ws/wsExchange.1cws?wsdl";
 	
	Попытка
		Определения = Новый WSОпределения(Адрес,Константы.ЛогинЦентральнойБазы.Получить(),Константы.ПарольЦентральнойБазы.Получить(),60);
	Исключение
		// Сообщим пользователю о том, что не получилось получить определение сервиса.
		ТекстОшибки = "Не удалось установить соединение с сервером. Повторите попытку позже.";
		Возврат Неопределено;
	КонецПопытки;


	URI = URIПространстваИменСервиса();
	Прокси = Новый WSПрокси(Определения, URI, "MAExchange", "MAExchangeSoap");  
	Прокси.Пользователь= Константы.ЛогинЦентральнойБазы.Получить();    
    Прокси.Пароль= Константы.ПарольЦентральнойБазы.Получить();

	Возврат Прокси;

КонецФункции

Функция URIПространстваИменСервиса()

	Возврат "http://localhost/wsExchange";

КонецФункции

Процедура ПринятьПакетОбмена(УзелОбмена, ДанныеОбмена) Экспорт

	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ДанныеОбмена.Получить());
	ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения();
	ЧтениеСообщения.НачатьЧтение(ЧтениеXML);
	ПланыОбмена.УдалитьРегистрациюИзменений(ЧтениеСообщения.Отправитель, ЧтениеСообщения.НомерПринятого);
	НачатьТранзакцию();
	
	Пока ВозможностьЧтенияДанных(ЧтениеXML) Цикл
		Данные = ПрочитатьДанные(ЧтениеXML);
		Если Не Данные = Неопределено Тогда
			// Не переносим изменение, полученное из офиса, если есть регистрация изменения
			// на планшете.
			Если Не ПринятьИзменения(ЧтениеСообщения.Отправитель, Данные) Тогда
				Продолжить;
			КонецЕсли;
			
			Данные.ОбменДанными.Отправитель = ЧтениеСообщения.Отправитель;
			Данные.ОбменДанными.Загрузка = Истина;
			Данные.Записать();
		КонецЕсли;
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	ЧтениеСообщения.ЗакончитьЧтение();
	ЧтениеXML.Закрыть();

КонецПроцедуры

#КонецОбласти